//27X27
static const uint8_t u8g_fan_bits[] U8X8_PROGMEM = {
  0x00, 0x60, 0x00, 0x00, 0x00, 0xF8, 0x03, 0x00, 0x00, 0xFC, 0x0F, 0x00, 
  0x00, 0xFE, 0x1F, 0x00, 0x00, 0xFE, 0x3F, 0x00, 0x00, 0xFC, 0x3F, 0x00, 
  0x00, 0xF8, 0x7F, 0x00, 0x00, 0xF8, 0x7F, 0x00, 0x00, 0xF0, 0x7F, 0x00, 
  0x00, 0xE0, 0x3F, 0x00, 0xE0, 0x01, 0x3E, 0x00, 0xF8, 0x03, 0x1C, 0x00, 
  0xFC, 0xF3, 0x1C, 0x00, 0xFE, 0xF9, 0x01, 0x00, 0xFE, 0xF9, 0x01, 0x00, 
  0xFF, 0xF9, 0x01, 0x00, 0xFF, 0xF9, 0x01, 0x00, 0xFF, 0xF3, 0x78, 0x00, 
  0xFF, 0x03, 0xFC, 0x03, 0xFE, 0x07, 0xFE, 0x07, 0xFE, 0xE3, 0xFF, 0x07, 
  0xFC, 0xF1, 0xFF, 0x03, 0xFC, 0xF0, 0xFF, 0x03, 0xF8, 0xF0, 0xFF, 0x01, 
  0x70, 0xE0, 0xFF, 0x00, 0x00, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x1E, 0x00, 
  };

//14X14
static const uint8_t u8g_fan_small_bits[] U8X8_PROGMEM = {
  0xC0, 0x03, 0xE0, 0x0F, 0xC0, 0x1F, 0x80, 0x1F, 0x00, 0x0F, 0x3C, 0x0C, 
  0x9E, 0x01, 0xDE, 0x03, 0x9F, 0x19, 0x3F, 0x3C, 0x1E, 0x3F, 0x8E, 0x3F, 
  0x84, 0x1F, 0x00, 0x0E, };

//12X13
static const uint8_t u8g_hot_air_bits[] U8X8_PROGMEM = {
  0x18, 0x00, 0x3C, 0x0C, 0x66, 0x06, 0xC3, 0x03, 0x98, 0x01, 0x3C, 0x0C, 
  0x66, 0x06, 0xC3, 0x03, 0x98, 0x01, 0x3C, 0x0C, 0x66, 0x06, 0xC3, 0x03, 
  0x80, 0x01, };

// 8X9 (Celsius)
static const uint8_t u8g_celsius_bits[] U8X8_PROGMEM = {
	0b00000010,
	0b01100101,
	0b10010010,
	0b00010000,
	0b00010000,
	0b00010000,
	0b00010000,
	0b10010000,
	0b01100000
};

//11X13
static const uint8_t u8g_bigCelsius_bits[] U8X8_PROGMEM = {
  0x07, 0x00, 0xC5, 0x03, 0x77, 0x04, 0x30, 0x00, 0x18, 0x00, 0x18, 0x00, 
  0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x30, 0x00, 0x70, 0x04, 
  0xC0, 0x03, };

//8X14
static const uint8_t u8g_clear_bits[] U8X8_PROGMEM = {
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000,
	0b00000000
};
//8X10
static const uint8_t u8g_heating_bits[] U8X8_PROGMEM = {
	0b01001000,
	0b00100100,
	0b00100100,
	0b01001000,
	0b10010000,
	0b10010000,
	0b01001000,
	0b00100100,
	0b00000000,
	0b11111110
};
 
//8X8  - Percent_small
static const uint8_t u8g_percent_small_bits[] U8X8_PROGMEM = {
  0x22, 0x25, 0x12, 0x10, 0x08, 0x48, 0xA4, 0x44, };

// 12X10 - Suspend (Down Arrow)
static const uint8_t u8g_suspend_arrow_bits[] U8X8_PROGMEM = {
  0xF0, 0x00, 0x90, 0x00, 0x90, 0x00, 0x9F, 0x0F, 0x03, 0x0C, 0x06, 0x06, 
  0x0C, 0x03, 0x98, 0x01, 0xF0, 0x00, 0x60, 0x00, };
  
  
void fan_logo(){
 	u8g2.clearBuffer();
	u8g2.setFont(u8g2_font_t0_22_mf);
	u8g2.setDrawColor(1);
	u8g2.drawStr(0,24,"Hot");	
	u8g2.drawXBMP(38, 5, 27, 27, u8g_fan_bits);
	u8g2.drawStr(68,24,"Gun");
	u8g2.setDrawColor(2);
	u8g2.sendBuffer();
	
}

void showMainData(){
	u8g2.clearBuffer();
	if(value_editable==1){
		u8g2.drawBox(66,0,33,11);
	}else if(value_editable==2){
		u8g2.drawBox(0,0,33,11);
	}
	u8g2.setFont(u8g2_font_profont12_tn);	//numeric font for preset temperature
	u8g2.setCursor(3, 10);
	u8g2.print(presetTemp);
	uint8_t tmpcoord = 4+6*(presetTemp<100 ? 2 : 3);	// two or three digits number
	u8g2.drawXBMP(tmpcoord, 1, 8, 9, u8g_celsius_bits);
	u8g2.setCursor(69, 10);
	u8g2.print(fanSpeed);
	tmpcoord = 70+6*(fanSpeed<100 ? 2 : 3);	// two or three digits number
	u8g2.drawXBMP(tmpcoord, 2, 8, 8, u8g_percent_small_bits);

	printHeaterState();
	
	u8g2.setFont(u8g2_font_t0_22_mf);
	u8g2.drawXBMP(0, 19, 12, 13, u8g_hot_air_bits);
	u8g2.setCursor(15, 31);
	u8g2.print(airTemp);
	tmpcoord = 14+12*(airTemp<100 ? 2 : 3)+2;	// two or three digits number
	u8g2.drawXBMP(tmpcoord, 18, 11, 13, u8g_bigCelsius_bits);

	u8g2.drawXBMP(69, 18, 14, 14, u8g_fan_small_bits);
	u8g2.setCursor(16+69, 31);
	u8g2.print(fanSpeed_actual);
	u8g2.print("%");

	if(suspendMode){
		u8g2.drawXBMP(36, 0, 12, 10, u8g_suspend_arrow_bits);
	}
	
	u8g2.sendBuffer();
}

void printHeaterState(){
	if(digitalRead(HEATER_PIN)){
		u8g2.drawXBMP( 120, 0, 8, 10, u8g_heating_bits);
	}else{
		u8g2.drawXBMP( 120, 0, 8, 10, u8g_clear_bits);
	}
}

#ifdef SUSPEND_LONGPRESS
void printSuspend(){
	u8g2.clearBuffer();
	u8g2.setCursor(0, 24);
	u8g2.print(F("SUSPEND"));
	u8g2.sendBuffer();
}

void printResume(){
	u8g2.clearBuffer();
	u8g2.setCursor(0, 24);
	u8g2.print(F("RESUME"));
	u8g2.sendBuffer();
}

#endif